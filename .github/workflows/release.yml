name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for the release (e.g., v1.0.0)'
        required: true
      release_name:
        description: 'Name of the release'
        required: true
        default: 'New Release'
      draft:
        description: 'Create as draft release?'
        required: false
        default: true
        type: boolean
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        default: false
        type: boolean
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install cx_Freeze wheel

      - name: Build Windows ZIP and MSI
        run: |
          # Run the Windows build script
          python build_windows.py

      - name: Upload Windows ZIP artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-zip
          path: dist/*windows.zip

      - name: Upload Windows MSI artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-msi
          path: dist/*.msi

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install cx_Freeze

      - name: Build macOS DMG
        run: |
          # Build DMG using the command from setup.py
          python setup.py bdist_dmg

      - name: Upload macOS DMG artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-dmg
          path: dist/*.dmg

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.release_name }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            artifacts/windows-zip/*.zip
            artifacts/windows-msi/*.msi
            artifacts/macos-dmg/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}